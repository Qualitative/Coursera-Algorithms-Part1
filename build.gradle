apply plugin: "sonar-runner"

sonarRunner {
    sonarProperties {
        property "sonar.host.url", "http://localhost:8083/sonarqube/"
        property "sonar.jdbc.url", "jdbc:postgresql://localhost:5432/Sonar"
        property "sonar.jdbc.driverClassName", "org.postgresql.Driver"
        property "sonar.jdbc.username", "sonar"
        property "sonar.jdbc.password", "sonar"
        property "sonar.jacoco.reportPath", "$buildDir/jacoco/jacocoTest.exec"
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'jacoco'

    group = 'com.ralko'
    
    sourceCompatibility = '1.7'
    targetCompatibility = '1.7'

    test {
        jacoco {
            destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        }
    }
}

subprojects {
    repositories {
        mavenCentral()

        flatDir { dirs '../libs' }
    }

    dependencies {
        compile 'org.apache.commons:commons-lang3:3.3.2'
        compile 'org.apache.commons:commons-collections4:4.0'
        compile 'org.apache.commons:commons-io:1.3.2'
        compile 'com.google.guava:guava:17.0'

        compile 'org.slf4j:slf4j-api:1.7.7'
        compile 'org.apache.logging.log4j:log4j-api:2.0-rc1'
        compile 'org.apache.logging.log4j:log4j-core:2.0-rc1'
        compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.0-rc1'

        compile name: 'algs4'
        compile name: 'stdlib'
        compile name: 'stdlib-package'

        testCompile 'junit:junit:4.11'
        testCompile 'org.mockito:mockito-all:1.9.5'
        testCompile 'org.powermock:powermock-core:1.5.5'
        testCompile 'org.powermock:powermock-api-mockito:1.5.5'
        testCompile 'org.powermock:powermock-module-junit4:1.5.5'

        runtime 'org.postgresql:postgresql:9.3-1100-jdbc4'
    }

    task 'createSourceDirectories' << {
        println "Creating all source sets"
        project.sourceSets.each { sourceSet ->
            def sourceDirectoriesSet = sourceSet.allSource
            sourceDirectoriesSet.srcDirs.each { directory ->
                if (!directory.mkdirs()) {
                    println "** Failed to create: ${directory}"
                } else {
                    println "Created: ${directory}"
                }
            }
        }
    }

    createSourceDirectories.description = 'Creates project\'s source directories'
}
